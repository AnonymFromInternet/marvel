{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/spinner/Spinner.js","components/services/MarvelService.js","hooks/http.hook.js","img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","utils/setContent.js","components/charInfo/CharInfo.js","components/Error Boundary/errorBoundary.js","img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","error","alt","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","useState","process","setProcess","loading","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getComics","getComic","id","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","name","description","thumbnail","path","extension","page","urls","wiki","comics","items","View","char","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","onClick","mjolnir","CharList","props","characters","setCharacters","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharactersLoaded","dynamicalImport","dynamicalConsole","itemRefs","useRef","array","item","index","imgStyle","ref","element","current","onCharSelected","forEach","classList","remove","add","focus","renderItems","errorMessage","spinner","object","catch","default","disabled","ended","length","prevewOffset","Skeleton","setContent","Component","CharInfo","charId","prototypes","number","ErrorBoundary","state","info","this","setState","children","MainPage","selectedChar","setSelectedChar","Helmet","content","decoration"],"mappings":"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","file":"static/js/6.c4450653.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import React from \"react\";\nimport error from \"./error.gif\"\n\nconst ErrorMessage = () => {\n    return(\n        <img style={{display: \"block\", width: \"250px\", height:\"250px\", objectFit: \"contain\", margin: \"0 auto\"}} src={error} alt=\"\" />\n    )\n}\nexport default ErrorMessage;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\"\n\nconst useMarvelService = () => {\n\n    const {loading, request, error, clearError, process, setProcess} = useHttp()\n\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\"\n    const _apiKey = \"apikey=b736e57beac2de713c9fa8216e270e22\"\n    const _baseOffset = 209\n    const getComics = async (url) => {\n        return await request(url)\n    }\n\n    const getComic = async (id) => {\n        return await request(`${_apiBase}comics/${id}?${_apiKey}`)\n    }\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\n        return res.data.results.map((_transformCharacter))\n    }\n\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`)\n        return _transformCharacter(res.data.results[0])\n    }\n\n    const _transformCharacter = (res) => {\n        return {\n            id: res.id,\n            name: res.name,\n            description: res.description,\n            thumbnail: res.thumbnail.path + \".\" + res.thumbnail.extension,\n            page: res.urls[0].url,\n            wiki: res.urls[1].url,\n            comics: res.comics.items\n        }\n    }\n    return {loading,\n            error,\n            getAllCharacters,\n            getCharacter,\n            clearError,\n            getComics,\n            getComic,\n            process,\n            setProcess}\n}\nexport default useMarvelService;","\n\nimport {useState, useCallback} from \"react\"\n\n\nexport const useHttp = () => {\n\n    const [process, setProcess] = useState(\"waiting\")\n\n\n\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const request = useCallback(async (url, method = \"GET\", body = null, headers={\"Content-Type\": \"application/json\"}) => {\n\n        setProcess(\"loading\")\n        setLoading(true)\n\n        try {\n            const response = await fetch(url, {method, body, headers})\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status ${response.status}`)\n            }\n\n            const data = await response.json()\n            setLoading(false)\n\n            return data\n\n        } catch(error) {\n            setLoading(false)\n            setError(error.message)\n            setProcess(\"error\")\n            throw error\n        }\n\n    }, [])\n\n    const clearError = useCallback(() => {\n        setError(null)\n        setProcess(\"loading\")\n    }, [])\n\n    return {loading, request, error, clearError, process, setProcess}\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\nimport './randomChar.scss';\nimport mjolnir from '../../img/mjolnir.png';\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({})\n\n    \n    useEffect(() => {\n        updateChar()\n    }, [])\n\n    const {loading, error, getCharacter, clearError} = useMarvelService()\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const updateChar = () => {\n        clearError()\n        \n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n\n        getCharacter(id)\n        .then(onCharLoaded)\n    }\n\n        return (\n            <div className=\"randomchar\">\n                \n                {loading ? <Spinner/> : <View char={char}/>}\n                {error ? <ErrorMessage/> : null}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div onClick={updateChar} className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    \n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, page, wiki} = char\n    const forEmptyDescription = \"Description is not exist\"\n    const defaultImageAddress = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\n\n    return (\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} alt=\"Random character\" className={thumbnail === defaultImageAddress ? \"randomchar__imgDefault\" : \"randomchar__img\"}/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description === \"\" ? forEmptyDescription : description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={page} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport { useEffect, useState, useRef } from 'react';\nimport useMarvelService from '../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from \"../errorMessage/ErrorMessage\"\n\n\nconst CharList = (props) => {\n\n    const [characters, setCharacters] = useState([])\n    const [newItemLoading, setNewItemLoading] = useState(false)\n    const [offset, setOffset] = useState(209)\n    const [charEnded, setCharEnded] = useState(false)\n    const {loading, error, getAllCharacters} = useMarvelService()\n\n    useEffect(() => {\n        onRequest(true)\n    }, [])\n\n    const onRequest = (initial) => {\n        initial? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllCharacters(offset)\n        .then(onCharactersLoaded)\n    }\n\n    const onCharactersLoaded = async (characters) => {\n        const {dynamicalImport, dynamicalConsole} = await import(\"./DynamicalImport\")\n        dynamicalImport()\n        dynamicalConsole()\n        setCharacters(characters)\n        setNewItemLoading(false)\n    }\n\n    const newItemsLoading = () => {\n        setNewItemLoading(true)\n\n        getAllCharacters(offset + 9)\n        .then(res => {\n            let ended = false\n\n            if (res.length < 9) {\n                ended = true\n            }\n\n            let prevewOffset = offset;\n            setCharacters(characters => [...characters, ...res])\n            setOffset(prevewOffset + 9)\n            setNewItemLoading(false)\n            setCharEnded(ended)\n        })\n    }\n    const itemRefs = useRef([])\n    const refForItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"))\n        itemRefs.current[id].classList.add(\"char__item_selected\")\n        itemRefs.current[id].focus()\n    }\n\n    function renderItems (array) {\n\n        const items = array.map((item, index) => {\n            let imgStyle = {\"objectFit\" : \"cover\"}\n            if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n                imgStyle = {\"objectFit\": \"unset\"}\n            }\n            return (\n                <li className=\"char__item\"\n                    ref={element => itemRefs.current[index] = element}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        refForItem(index)\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(characters)\n    const errorMessage = error? <ErrorMessage/> : null\n    const spinner = loading && !newItemLoading ? <Spinner/> : null\n    if (loading) {\n        import(\"./DynamicalImport\")\n        .then(object => object.dynamicalImport())\n        .catch()\n        import(\"./DynamicalImport\").then(object => object.default())\n        \n    }\n\n\n    return(\n        <div className=\"char__list\">\n            {spinner}\n            {errorMessage}\n            {items}\n            <button\n            disabled={newItemLoading}\n            style={{\"display\": charEnded ? \"none\" : \"block\"}}\n            onClick={newItemsLoading}\n            className=\"button button__main button__long\">\n            <div className=\"inner\"> Load more</div>\n            </button>\n        </div>\n    )\n\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","// FSM\n\nimport Skeleton from \"../components/skeleton/Skeleton\"\nimport Spinner from \"../components/spinner/Spinner\"\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\"\n\n\nconst setContent = (process, data, Component) => {\n    switch (process) {\n        case \"waiting\":\n            return <Skeleton/>\n            break\n        case \"loading\":\n            return <Spinner/>\n            break\n        case \"confirmed\":\n            return <Component data={data}/>\n            break\n        case \"error\":\n            return <ErrorMessage/>\n            break\n        default:\n            throw new Error(\"Unexpected Error\")\n    }\n}\nexport default setContent","import './charInfo.scss';\nimport { useState, useEffect } from 'react';\nimport { number } from \"prop-types\"\nimport useMarvelService from '../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null)\n\n    \n    // Свойства process и setProcess используется для FSM\n    const {getCharacter, clearError, process, setProcess}= useMarvelService()\n\n    // Загружается после загрузки страницы\n    useEffect(() => {\n        updateChar()\n    }, [props])\n\n    const updateChar = () => {\n        if (!props.charId) {\n            return\n        }\n        clearError()\n\n        getCharacter(props.charId)\n        .then(onCharLoaded)\n        .then(() => setProcess(\"confirmed\"))\n\n    }\n    \n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n        return (\n            <div className=\"char__info\">\n                {setContent(process, char, View)}\n            </div>\n        )\n\n}\n\n\nCharInfo.prototypes = {\n    charId: number\n}\n\nconst View = ({data}) => {\n    const {name, description, thumbnail, page, wiki, comics} = data\n    const defaultImageAddress = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\n    return(\n        <>\n        <div className=\"char__basics\">\n                <img style={thumbnail === defaultImageAddress ? {'objectFit': 'contain'} : null} src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={page} className=\"button button__main\">\n                            <div className=\"inner\">Page</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            {comics.length > 0 ? null : \"There is no Comics\"}\n            <ul className=\"char__comics-list\">\n                {\n                    comics.map((item, index) => {\n                        if (index > 9) {\n                            return null\n                        }\n\n                        return(\n                            <li key={index} className=\"char__comics-item\">\n                                {item.name}\n                            </li>)\n                    })  \n                }\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react\";\n\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n\n    componentDidCatch(error, info) {\n        this.setState({\n            error: true\n        })\n    }\n\n    static getDerivedStateFromError(error) {\n        return {error: true}\n    }\n    render() {\n        if (this.state.error) {\n            return <h2>Something wen wrong</h2>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../randomChar/RandomChar\"\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../Error Boundary/errorBoundary\";\nimport {Helmet} from \"react-helmet\"\n\nimport decoration from '../../img/vision.png';\n\nimport { useState } from \"react\";\n\nconst MainPage = () => {\n\n    const [selectedChar, setSelectedChar] = useState(null)\n    \n    const onCharSelected = (id) => {\n        setSelectedChar(id)\n    }\n\n\n    return(\n        <>\n        <Helmet>\n            <meta\n                name=\"description\"\n                content=\"Marvel information Portal\"/>\n            <title>Marvel information Portal</title>\n\n        </Helmet>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n                                \n            <div className=\"char__content\">\n                <CharList onCharSelected={onCharSelected}/>\n\n                {/* Wrapper */}\n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar}/>\n                </ErrorBoundary>\n                \n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n\n    )\n}\n\nexport default MainPage"],"sourceRoot":""}